{"ast":null,"code":"import _classCallCheck from \"/Users/kathleenmontesano/upenn/homework/Final-Project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kathleenmontesano/upenn/homework/Final-Project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kathleenmontesano/upenn/homework/Final-Project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kathleenmontesano/upenn/homework/Final-Project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kathleenmontesano/upenn/homework/Final-Project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kathleenmontesano/upenn/homework/Final-Project/client/src/pages/Search.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport auth from \"../utils/auth\"; // import SearchBar from \"../components/SearchBar\"\n// import SearchButton from \"../components/SearchButton\"\n\nimport SearchResultsWrapper from \"../components/SearchResultsWrapper\";\nimport SearchCard from \"../components/SearchCard\";\nimport WorldMap from \"../components/WorldMap\";\nimport NorthAmerica from \"../components/NorthAmerica\";\nimport SouthAmerica from \"../components/SouthAmerica\";\nimport Africa from \"../components/Africa\";\nimport Europe from \"../components/Europe\";\nimport YelpCard from \"../components/YelpCard\";\nvar query; // let continent;\n\nvar style;\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      foods: [],\n      yelp: [],\n      // search: query,\n      continent: \"\",\n      country: \"\",\n      dishName: \"\",\n      description: \"\",\n      image: \"\",\n      userName: auth.userName,\n      userId: auth.userId,\n      worldMap: Boolean,\n      showSearch: Boolean,\n      showYelp: Boolean\n    };\n\n    _this.continentOnClick = function (e) {\n      e.preventDefault();\n      _this.continent = e.target.getAttribute(\"data-search\");\n      console.log(_this.continent);\n      console.log(_this.state.worldMap);\n\n      _this.setState({\n        continent: _this.continent,\n        worldMap: false\n      }); // this.getContinent();\n      // this.worldMapShow();\n\n\n      console.log(_this.state.worldMap);\n    };\n\n    _this.loadFoods = function () {\n      console.log(\"WHAT\");\n      API.getFoods().then(function (res) {\n        console.log(res.data);\n\n        _this.setState({\n          foods: res.data,\n          // search: query,\n          continent: \"\",\n          country: \"\",\n          dishName: \"\",\n          description: \"\",\n          image: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      console.log(_this.state.foods);\n    };\n\n    _this.loadFoodsEvent = function (e) {\n      console.log(\"in load books event\");\n      e.preventDefault();\n\n      _this.loadFoods();\n    };\n\n    _this.handleInputClick = function (e) {\n      e.preventDefault();\n      console.log(e.target.getAttribute(\"data-search\"));\n      query = e.target.getAttribute(\"data-search\");\n      var search = {\n        coun: query\n      };\n      API.getFoodsByCountry(search).then(function (res) {\n        console.log(res);\n\n        _this.setState({\n          foods: res.data,\n          showSearch: true,\n          // search: query,\n          continent: \"\",\n          country: \"\",\n          dishName: \"\",\n          description: \"\",\n          image: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      console.log(_this.state); // this.loadBooks();\n      // this.loadFoodsEvent(e);\n    };\n\n    _this.handleInputClickYelp = function (e) {\n      e.preventDefault(); // console.log(\"Yelp target! \" + (e.target.))\n\n      console.log(e.target.getAttribute(\"data-name\"));\n      var search = {\n        search: e.target.getAttribute(\"data-name\")\n      }; // query = e.target.getAttribute(\"data-search\");\n      // const search = { coun: query };\n\n      API.search(search).then(function (res) {\n        console.log(res.data.businesses);\n\n        _this.setState({\n          yelp: res.data.businesses,\n          // search: query,\n          continent: \"\",\n          country: \"\",\n          dishName: \"\",\n          description: \"\",\n          image: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      console.log(_this.state.yelp); // this.loadBooks();\n      // this.loadFoodsEvent(e);\n    };\n\n    _this.saveButtonClick = function (key) {\n      console.log(key);\n      console.log(_this.state);\n      var i;\n\n      for (i = 0; i < _this.state.foods.length; i++) {\n        if (key === _this.state.foods[i].id) {\n          console.log(\"SAVED this passed in\" + _this.state.foods[i]);\n          var newFood = {\n            id: _this.state.foods[i].id,\n            continent: _this.state.foods[i].continent,\n            country: _this.state.foods[i].country,\n            dishName: _this.state.foods[i].dishName,\n            description: _this.state.foods[i].description,\n            image: _this.state.foods[i].image,\n            saved: true\n          };\n          console.log(newFood);\n          API.saveFood({\n            foodId: _this.state.foods[i].id,\n            userId: _this.state.userId // continent: this.state.foods[i].continent,\n            // country: this.state.foods[i].country,\n            // dishName: this.state.foods[i].dishName,\n            // description: this.state.foods[i].description,\n            // image: this.state.foods[i].image,\n            // saved: true\n\n          }) // .then(res => this.loadBooks())\n          .catch(function (err) {\n            return console.log(err);\n          });\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this.loadFoods();\n      this.setState({\n        worldMap: true,\n        showSearch: false,\n        showYelp: false\n      });\n      console.log(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(style);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(WorldMap, {\n        handleInputClick: this.handleInputClick,\n        continentOnClick: this.continentOnClick,\n        worldMap: this.state.worldMap,\n        getContinent: this.getContinent // handleInputClickYelp={this.handleInputClickYelp}\n        // style={this.state.worldMap === true ? styleBlock : styleNone}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(NorthAmerica, {\n        handleInputClick: this.handleInputClick,\n        continent: this.state.continent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), React.createElement(SouthAmerica, {\n        handleInputClick: this.handleInputClick,\n        continent: this.state.continent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(Africa, {\n        handleInputClick: this.handleInputClick,\n        continent: this.state.continent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(Europe, {\n        handleInputClick: this.handleInputClick,\n        continent: this.state.continent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), React.createElement(SearchResultsWrapper, {\n        showSearch: this.state.showSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, this.state.foods.map(function (food) {\n        return React.createElement(SearchCard, {\n          saveButtonClick: _this2.saveButtonClick,\n          key: food.id,\n          id: food.id,\n          continent: food.continent,\n          country: food.country,\n          dishName: food.dishName,\n          description: food.description,\n          image: food.image,\n          yelp: _this2.handleInputClickYelp,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        });\n      })), this.state.yelp.map(function (yel) {\n        return React.createElement(YelpCard, {\n          key: yel.id,\n          name: yel.name,\n          image: yel.image_url,\n          address: yel.location.address1,\n          yelpLink: yel.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/kathleenmontesano/upenn/homework/Final-Project/client/src/pages/Search.js"],"names":["React","Component","API","auth","SearchResultsWrapper","SearchCard","WorldMap","NorthAmerica","SouthAmerica","Africa","Europe","YelpCard","query","style","Search","state","foods","yelp","continent","country","dishName","description","image","userName","userId","worldMap","Boolean","showSearch","showYelp","continentOnClick","e","preventDefault","target","getAttribute","console","log","setState","loadFoods","getFoods","then","res","data","catch","err","loadFoodsEvent","handleInputClick","search","coun","getFoodsByCountry","handleInputClickYelp","businesses","saveButtonClick","key","i","length","id","newFood","saved","saveFood","foodId","getContinent","map","food","yel","name","image_url","location","address1","url"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport auth from \"../utils/auth\";\n// import SearchBar from \"../components/SearchBar\"\n// import SearchButton from \"../components/SearchButton\"\nimport SearchResultsWrapper from \"../components/SearchResultsWrapper\";\nimport SearchCard from \"../components/SearchCard\";\nimport WorldMap from \"../components/WorldMap\";\nimport NorthAmerica from \"../components/NorthAmerica\";\nimport SouthAmerica from \"../components/SouthAmerica\";\nimport Africa from \"../components/Africa\";\nimport Europe from \"../components/Europe\";\nimport YelpCard from \"../components/YelpCard\";\n\nlet query;\n// let continent;\nlet style;\n\nclass Search extends Component {\n  // constructor(props) {\n  //   super(props);\n\n  // }\n  state = {\n    foods: [],\n    yelp:[],\n    // search: query,\n    continent: \"\",\n    country: \"\",\n    dishName: \"\",\n    description: \"\",\n    image: \"\",\n    userName: auth.userName,\n    userId: auth.userId,\n    worldMap: Boolean,\n    showSearch: Boolean,\n    showYelp: Boolean\n  };\n\n\n\n  continentOnClick = e => {\n    e.preventDefault();\n    this.continent = e.target.getAttribute(\"data-search\");\n    console.log(this.continent);\n    console.log(this.state.worldMap);\n    this.setState({\n      continent: this.continent,\n      worldMap: false\n    });\n    // this.getContinent();\n\n    // this.worldMapShow();\n    console.log(this.state.worldMap);\n  };\n\n  componentDidMount() {\n    // this.loadFoods();\n    this.setState({\n      worldMap: true,\n      showSearch: false,\n      showYelp: false\n    });\n    console.log(this.state);\n  }\n\n  loadFoods = () => {\n    console.log(\"WHAT\");\n    API.getFoods()\n      .then(res => {\n        console.log(res.data);\n        this.setState({\n          foods: res.data,\n          // search: query,\n          continent: \"\",\n          country: \"\",\n          dishName: \"\",\n          description: \"\",\n          image: \"\"\n        });\n      })\n\n      .catch(err => console.log(err));\n    console.log(this.state.foods);\n  };\n\n  loadFoodsEvent = e => {\n    console.log(\"in load books event\");\n    e.preventDefault();\n    this.loadFoods();\n  };\n\n  // apiCountrySearch = query => {\n  //   console.log(\"WHAT\");\n  //   const search = { country: query };\n  //   API.getFoodsByCountry(search)\n  //     .then(res => {\n  //       console.log(res.data);\n  //       this.setState({\n  //         foods: res.data,\n  //         // search: query,\n  //         continent: \"\",\n  //         country: \"\",\n  //         dishName: \"\",\n  //         description: \"\",\n  //         image: \"\"\n  //       });\n  //     })\n\n  //     .catch(err => console.log(err));\n  //   console.log(this.state.foods);\n  // };\n\n  handleInputClick = e => {\n    e.preventDefault();\n    console.log(e.target.getAttribute(\"data-search\"));\n    query = e.target.getAttribute(\"data-search\");\n    const search = { coun: query };\n    API.getFoodsByCountry(search)\n      .then(res => {\n        console.log(res);\n        this.setState({\n          foods: res.data,\n          showSearch: true,\n          // search: query,\n          continent: \"\",\n          country: \"\",\n          dishName: \"\",\n          description: \"\",\n          image: \"\"\n        });\n      })\n\n      .catch(err => console.log(err));\n    console.log(this.state);\n\n    // this.loadBooks();\n    // this.loadFoodsEvent(e);\n  };\n\n\n\n  handleInputClickYelp = e => {\n    e.preventDefault();\n    // console.log(\"Yelp target! \" + (e.target.))\n    \n    console.log(e.target.getAttribute(\"data-name\"));\n    const search = { search: e.target.getAttribute(\"data-name\") };\n    // query = e.target.getAttribute(\"data-search\");\n    // const search = { coun: query };\n    API.search(search)\n      .then(res => {\n        console.log(res.data.businesses);\n        this.setState({\n          yelp: res.data.businesses,\n          // search: query,\n          continent: \"\",\n          country: \"\",\n          dishName: \"\",\n          description: \"\",\n          image: \"\"\n        });\n      })\n\n      .catch(err => console.log(err));\n    console.log(this.state.yelp);\n\n    // this.loadBooks();\n    // this.loadFoodsEvent(e);\n  };\n\n\n  // handleInputChange = e => {\n  //   query = e.target\n  //   // .getAttribute('data-search');\n  //   console.log(query);\n  //   this.setState({\n  //     search: query\n  //   });\n  // };\n\n  saveButtonClick = key => {\n    console.log(key);\n    console.log(this.state);\n    let i;\n    for (i = 0; i < this.state.foods.length; i++) {\n      if (key === this.state.foods[i].id) {\n        console.log(\n          \"SAVED this passed in\" + this.state.foods[i]\n        );\n\n        const newFood = {\n          id: this.state.foods[i].id,\n          continent: this.state.foods[i].continent,\n          country: this.state.foods[i].country,\n          dishName: this.state.foods[i].dishName,\n          description: this.state.foods[i].description,\n          image: this.state.foods[i].image,\n          saved: true\n        };\n        console.log(newFood);\n        API.saveFood({\n          foodId: this.state.foods[i].id,\n          userId: this.state.userId\n\n          // continent: this.state.foods[i].continent,\n          // country: this.state.foods[i].country,\n          // dishName: this.state.foods[i].dishName,\n          // description: this.state.foods[i].description,\n          // image: this.state.foods[i].image,\n          // saved: true\n        })\n          // .then(res => this.loadBooks())\n          .catch(err => console.log(err));\n      }\n    }\n  };\n\n  render() {\n    console.log(style);\n    return (\n      <div>\n        <WorldMap\n          handleInputClick={this.handleInputClick}\n          continentOnClick={this.continentOnClick}\n          worldMap={this.state.worldMap}\n          getContinent={this.getContinent}\n          // handleInputClickYelp={this.handleInputClickYelp}\n          // style={this.state.worldMap === true ? styleBlock : styleNone}\n        />\n    \n\n        {/* {this.getContinent()} */}\n\n        <NorthAmerica handleInputClick={this.handleInputClick} continent={this.state.continent}/>\n        <SouthAmerica handleInputClick={this.handleInputClick} continent={this.state.continent}/>\n        <Africa handleInputClick={this.handleInputClick} continent={this.state.continent}/>\n        <Europe handleInputClick={this.handleInputClick} continent={this.state.continent}/>\n\n        <SearchResultsWrapper showSearch={this.state.showSearch} >\n          {this.state.foods.map(food => (\n            <SearchCard\n              saveButtonClick={this.saveButtonClick}\n              key={food.id}\n              id={food.id}\n              continent={food.continent}\n              country={food.country}\n              dishName={food.dishName}\n              description={food.description}\n              image={food.image}\n              yelp={this.handleInputClickYelp}\n            />\n          ))}\n        </SearchResultsWrapper>\n       \n        {this.state.yelp.map(yel => (\n            <YelpCard\n           \n              key={yel.id}\n              name={yel.name}\n              image={yel.image_url}\n              address={yel.location.address1}\n              yelpLink={yel.url}\n             \n            />\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}