{"ast":null,"code":"import _classCallCheck from \"/Users/kathleenmontesano/upenn/homework/Final-Project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kathleenmontesano/upenn/homework/Final-Project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kathleenmontesano/upenn/homework/Final-Project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kathleenmontesano/upenn/homework/Final-Project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kathleenmontesano/upenn/homework/Final-Project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kathleenmontesano/upenn/homework/Final-Project/client/src/pages/Search.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\"; // import SearchBar from \"../components/SearchBar\"\n// import SearchButton from \"../components/SearchButton\"\n\nimport SearchResultsWrapper from \"../components/SearchResultsWrapper\";\nimport SearchCard from \"../components/SearchCard\";\nimport WorldMap from \"../components/WorldMap\";\nimport NorthAmerica from \"../components/NorthAmerica\";\nvar query;\nvar continent;\nvar style;\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      foods: [],\n      // search: query,\n      title: \"\",\n      authors: [],\n      description: \"\",\n      image: \"\",\n      link: \"\",\n      worldMap: Boolean\n    };\n    _this.styleNone = {\n      display: \"none\"\n    };\n    _this.styleBlock = {\n      display: \"block\" // worldMapShow = () => {\n      //   this.state.worldMap ?  styleNone = { display : \"none\" } : styleBlock = { display : \"block\" }\n      // }\n\n    };\n\n    _this.continentOnClick = function (e) {\n      e.preventDefault();\n      continent = e.target.getAttribute('data-search');\n      console.log(continent);\n      console.log(_this.state.worldMap);\n\n      _this.setState({\n        worldMap: false\n      });\n\n      _this.worldMapShow();\n\n      console.log(_this.state.worldMap);\n    };\n\n    _this.loadFoods = function () {\n      console.log(\"WHAT\");\n      API.getFoods().then(function (res) {\n        console.log(res.data);\n\n        _this.setState({\n          foods: res.data,\n          // search: query,\n          title: \"\",\n          authors: \"\",\n          discription: \"\",\n          image: \"\",\n          link: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      console.log(_this.state.foods);\n    };\n\n    _this.loadFoodsEvent = function (e) {\n      console.log(\"in load books event\");\n      e.preventDefault();\n\n      _this.loadFoods();\n    };\n\n    _this.apiCountrySearch = function (query) {\n      console.log(\"WHAT\");\n      var search = {\n        country: query\n      };\n      API.getFoodsByCountry(search).then(function (res) {\n        console.log(res.data);\n\n        _this.setState({\n          foods: res.data,\n          // search: query,\n          continent: \"\",\n          country: \"\",\n          dishName: \"\",\n          description: \"\",\n          image: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      console.log(_this.state.foods);\n    };\n\n    _this.handleInputClick = function (e) {\n      e.preventDefault();\n      console.log(e.target.getAttribute('data-search'));\n      query = e.target.getAttribute('data-search');\n      var search = {\n        coun: query\n      };\n      API.getFoodsByCountry(search).then(function (res) {\n        console.log(res);\n\n        _this.setState({\n          foods: res.data,\n          // search: query,\n          title: \"\",\n          authors: \"\",\n          discription: \"\",\n          image: \"\",\n          link: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      console.log(_this.state.foods); // this.loadBooks();\n      // this.loadFoodsEvent(e);\n    };\n\n    _this.saveButtonClick = function (key) {\n      console.log(key);\n      console.log(_this.state);\n      var i;\n\n      for (i = 0; i < _this.state.books.length; i++) {\n        if (key === _this.state.books[i].id) {\n          console.log(\"SAVED this passed in\" + _this.state.books[i].volumeInfo.title);\n          var newBook = {\n            title: _this.state.books[i].volumeInfo.title,\n            authors: _this.state.books[i].volumeInfo.authors,\n            description: _this.state.books[i].volumeInfo.description,\n            image: _this.state.books[i].volumeInfo.imageLinks.thumbnail,\n            link: _this.state.books[i].volumeInfo.infoLink,\n            saved: true\n          };\n          console.log(newBook);\n          API.saveBook({\n            id: _this.state.books[i].id,\n            title: _this.state.books[i].volumeInfo.title,\n            authors: _this.state.books[i].volumeInfo.authors,\n            description: _this.state.books[i].volumeInfo.description,\n            image: _this.state.books[i].volumeInfo.imageLinks.thumbnail,\n            link: _this.state.books[i].volumeInfo.infoLink,\n            saved: true\n          }) // .then(res => this.loadBooks())\n          .catch(function (err) {\n            return console.log(err);\n          });\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this.loadFoods();\n      this.setState({\n        worldMap: true\n      });\n      console.log(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(style);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(WorldMap, {\n        continentOnClick: this.continentOnClick,\n        worldMap: this.state.worldMap,\n        style: this.state.worldMap === true ? styleBlock : styleNone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(NorthAmerica, {\n        handleInputClick: this.handleInputClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(SearchResultsWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, this.state.foods.map(function (food) {\n        return React.createElement(SearchCard, {\n          saveButtonClick: _this2.saveButtonClick,\n          key: food._id,\n          id: food._id,\n          continent: food.continent,\n          country: food.country,\n          dishName: food.dishName,\n          description: food.description,\n          image: food.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/kathleenmontesano/upenn/homework/Final-Project/client/src/pages/Search.js"],"names":["React","Component","API","SearchResultsWrapper","SearchCard","WorldMap","NorthAmerica","query","continent","style","Search","state","foods","title","authors","description","image","link","worldMap","Boolean","styleNone","display","styleBlock","continentOnClick","e","preventDefault","target","getAttribute","console","log","setState","worldMapShow","loadFoods","getFoods","then","res","data","discription","catch","err","loadFoodsEvent","apiCountrySearch","search","country","getFoodsByCountry","dishName","handleInputClick","coun","saveButtonClick","key","i","books","length","id","volumeInfo","newBook","imageLinks","thumbnail","infoLink","saved","saveBook","map","food","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../utils/API\";\n// import SearchBar from \"../components/SearchBar\"\n// import SearchButton from \"../components/SearchButton\"\nimport SearchResultsWrapper from \"../components/SearchResultsWrapper\"\nimport SearchCard from \"../components/SearchCard\"\nimport WorldMap from \"../components/WorldMap\"\nimport NorthAmerica from \"../components/NorthAmerica\"\nlet query;\nlet continent;\nlet style;\n\n\nclass Search extends Component {\n  // constructor(props) {\n  //   super(props);\n   \n  // }\n  state = {\n    foods: [],\n    // search: query,\n    title: \"\",\n    authors: [],\n    description: \"\",\n    image: \"\",\n    link: \"\",\n    worldMap: Boolean\n  };\n  styleNone = { display : \"none\" }\n\n  styleBlock = { display : \"block\" }\n\n  // worldMapShow = () => {\n  //   this.state.worldMap ?  styleNone = { display : \"none\" } : styleBlock = { display : \"block\" }\n  // }\n\n  continentOnClick = (e) => {\n    e.preventDefault();\n      continent = e.target.getAttribute('data-search');\n      console.log(continent)\n      console.log(this.state.worldMap)\n      this.setState({\n        worldMap: false\n      })\n\n      this.worldMapShow();\n      console.log(this.state.worldMap)\n  }\n\n  componentDidMount() {\n    // this.loadFoods();\n    this.setState({\n      worldMap: true\n    })\n    console.log(this.state);\n  }\n\n  loadFoods = () => {\n    console.log(\"WHAT\")\n    API.getFoods()\n      .then(res =>\n        {console.log(res.data)\n        this.setState({\n          foods: res.data,\n          // search: query,\n          title: \"\",\n          authors: \"\",\n          discription: \"\",\n          image: \"\",\n          link: \"\"\n        \n        })}\n      )\n\n      .catch(err => console.log(err));\n    console.log(this.state.foods);\n  };\n\n  loadFoodsEvent = e => {\n    console.log(\"in load books event\");\n    e.preventDefault();\n    this.loadFoods();\n  };\n\n  apiCountrySearch = (query) => {\n    console.log(\"WHAT\")\n    const search = {country: query}\n    API.getFoodsByCountry(search)\n      .then(res =>\n        {console.log(res.data)\n        this.setState({\n          foods: res.data,\n          // search: query,\n          continent: \"\",\n          country: \"\",\n          dishName: \"\",\n          description: \"\",\n          image: \"\",\n\n        \n        })}\n      )\n\n      .catch(err => console.log(err));\n    console.log(this.state.foods);\n\n  };\n\n  handleInputClick = e => {\n    e.preventDefault();\n    console.log(e.target.getAttribute('data-search'))\n    query = e.target.getAttribute('data-search');\n    const search = {coun: query}\n    API.getFoodsByCountry(search)\n      .then(res =>\n        {console.log(res)\n        this.setState({\n          foods: res.data,\n          // search: query,\n          title: \"\",\n          authors: \"\",\n          discription: \"\",\n          image: \"\",\n          link: \"\"\n        \n        })}\n      )\n\n      .catch(err => console.log(err));\n    console.log(this.state.foods);\n    \n    // this.loadBooks();\n    // this.loadFoodsEvent(e);\n  };\n\n  \n  // handleInputChange = e => {\n  //   query = e.target\n  //   // .getAttribute('data-search');\n  //   console.log(query);\n  //   this.setState({\n  //     search: query\n  //   });\n  // };\n\n  saveButtonClick = key => {\n    console.log(key);\n    console.log(this.state);\n    let i;\n    for (i = 0; i < this.state.books.length; i++) {\n      if (key === this.state.books[i].id) {\n        console.log(\"SAVED this passed in\" +this.state.books[i].volumeInfo.title);\n       \n        const newBook=\n        {\n          title: this.state.books[i].volumeInfo.title,\n          authors: this.state.books[i].volumeInfo.authors,\n          description: this.state.books[i].volumeInfo.description,\n          image: this.state.books[i].volumeInfo.imageLinks.thumbnail,\n          link: this.state.books[i].volumeInfo.infoLink,\n          saved: true\n        }\n        console.log(newBook);\n        API.saveBook({\n          id: this.state.books[i].id,\n          title: this.state.books[i].volumeInfo.title,\n          authors: this.state.books[i].volumeInfo.authors,\n          description: this.state.books[i].volumeInfo.description,\n          image: this.state.books[i].volumeInfo.imageLinks.thumbnail,\n          link: this.state.books[i].volumeInfo.infoLink,\n          saved: true\n        })\n          // .then(res => this.loadBooks())\n          .catch(err => console.log(err));\n      }\n    }\n  };\n\n  render() {\n    console.log(style)\n    return (\n      <div>\n        \n        <WorldMap \n        continentOnClick={this.continentOnClick}\n        worldMap={this.state.worldMap}\n        style={this.state.worldMap === true ? styleBlock : styleNone}\n        \n        />\n        <NorthAmerica handleInputClick={this.handleInputClick}/>\n     \n     \n        <SearchResultsWrapper>\n          {this.state.foods.map(food => (\n            <SearchCard\n              saveButtonClick={this.saveButtonClick}\n              key={food._id}\n              id={food._id}\n              continent={food.continent}\n              country={food.country}\n              dishName={food.dishName}\n              description={food.description}\n              image={food.image}\n          \n            />\n          ))}\n        </SearchResultsWrapper>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}