{"ast":null,"code":"import API from \"./API\";\nexport default {\n  isAuthenticated: false,\n  userId: \"\",\n  userName: \"\",\n  password: \"\",\n  authenticate: function authenticate(userName, password, cb) {\n    var _this = this;\n\n    var userInfo = {\n      userName: userName,\n      password: password\n    };\n    API.checkUserLogin(userInfo).then(function (res) {\n      console.log(res.data);\n\n      if (res.data !== null) {\n        _this.userId = res.data.id;\n        _this.userName = userName;\n        _this.password = password;\n        _this.isAuthenticated = true;\n        cb(null);\n      } else {\n        cb(-1);\n      }\n    });\n  },\n  authenticateForSignUp: function authenticateForSignUp(userName, password, cb) {\n    var _this2 = this;\n\n    var userInfo = {\n      userName: userName,\n      password: password\n    };\n    API.checkForUserName(userInfo).then(function (res) {\n      console.log(res.data);\n\n      if (res.data === null) {\n        API.signUpUser(userInfo).then(function (res) {\n          console.log(res.data);\n          _this2.userId = res.data.id;\n          _this2.userName = userName;\n          _this2.password = password;\n          _this2.isAuthenticated = true;\n        }).catch(function (err) {\n          return console.log(err);\n        }); // this.isAuthenticated = true;\n\n        cb(null);\n      } else {\n        alert(\"User name already taken try different username\");\n        cb(-1);\n      }\n    });\n  },\n  signout: function signout(cb) {\n    this.isAuthenticated = false;\n    setTimeout(cb, 100); // fake async\n  }\n};","map":{"version":3,"sources":["/Users/kathleenmontesano/upenn/homework/Final-Project/client/src/utils/auth.js"],"names":["API","isAuthenticated","userId","userName","password","authenticate","cb","userInfo","checkUserLogin","then","res","console","log","data","id","authenticateForSignUp","checkForUserName","signUpUser","catch","err","alert","signout","setTimeout"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AAEA,eAAe;AACbC,EAAAA,eAAe,EAAE,KADJ;AAEbC,EAAAA,MAAM,EAAE,EAFK;AAGbC,EAAAA,QAAQ,EAAE,EAHG;AAIbC,EAAAA,QAAQ,EAAE,EAJG;AAMbC,EAAAA,YANa,wBAMAF,QANA,EAMUC,QANV,EAMoBE,EANpB,EAMwB;AAAA;;AACnC,QAAIC,QAAQ,GAAG;AAAEJ,MAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,MAAAA,QAAQ,EAAEA;AAAhC,KAAf;AACAJ,IAAAA,GAAG,CAACQ,cAAJ,CAAmBD,QAAnB,EAA6BE,IAA7B,CAAkC,UAAAC,GAAG,EAAI;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;;AACA,UAAIH,GAAG,CAACG,IAAJ,KAAa,IAAjB,EAAuB;AACrB,QAAA,KAAI,CAACX,MAAL,GAAcQ,GAAG,CAACG,IAAJ,CAASC,EAAvB;AACA,QAAA,KAAI,CAACX,QAAL,GAAgBA,QAAhB;AACA,QAAA,KAAI,CAACC,QAAL,GAAgBA,QAAhB;AACA,QAAA,KAAI,CAACH,eAAL,GAAuB,IAAvB;AACAK,QAAAA,EAAE,CAAC,IAAD,CAAF;AACD,OAND,MAMO;AACLA,QAAAA,EAAE,CAAC,CAAC,CAAF,CAAF;AACD;AACF,KAXD;AAYD,GApBY;AAsBbS,EAAAA,qBAtBa,iCAsBSZ,QAtBT,EAsBmBC,QAtBnB,EAsB6BE,EAtB7B,EAsBiC;AAAA;;AAC5C,QAAIC,QAAQ,GAAG;AAAEJ,MAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,MAAAA,QAAQ,EAAEA;AAAhC,KAAf;AACAJ,IAAAA,GAAG,CAACgB,gBAAJ,CAAqBT,QAArB,EAA+BE,IAA/B,CAAoC,UAAAC,GAAG,EAAI;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;;AACA,UAAIH,GAAG,CAACG,IAAJ,KAAa,IAAjB,EAAuB;AACrBb,QAAAA,GAAG,CAACiB,UAAJ,CAAeV,QAAf,EACGE,IADH,CACQ,UAAAC,GAAG,EAAI;AACXC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACA,UAAA,MAAI,CAACX,MAAL,GAAcQ,GAAG,CAACG,IAAJ,CAASC,EAAvB;AACA,UAAA,MAAI,CAACX,QAAL,GAAgBA,QAAhB;AACA,UAAA,MAAI,CAACC,QAAL,GAAgBA,QAAhB;AACA,UAAA,MAAI,CAACH,eAAL,GAAuB,IAAvB;AACD,SAPH,EAQGiB,KARH,CAQS,UAAAC,GAAG;AAAA,iBAAIR,OAAO,CAACC,GAAR,CAAYO,GAAZ,CAAJ;AAAA,SARZ,EADqB,CAUrB;;AACAb,QAAAA,EAAE,CAAC,IAAD,CAAF;AACD,OAZD,MAYO;AACLc,QAAAA,KAAK,CAAC,gDAAD,CAAL;AACAd,QAAAA,EAAE,CAAC,CAAC,CAAF,CAAF;AACD;AACF,KAlBD;AAmBD,GA3CY;AA6Cbe,EAAAA,OA7Ca,mBA6CLf,EA7CK,EA6CD;AACV,SAAKL,eAAL,GAAuB,KAAvB;AACAqB,IAAAA,UAAU,CAAChB,EAAD,EAAK,GAAL,CAAV,CAFU,CAEW;AACtB;AAhDY,CAAf","sourcesContent":["import API from \"./API\";\n\nexport default {\n  isAuthenticated: false,\n  userId: \"\",\n  userName: \"\",\n  password: \"\",\n\n  authenticate(userName, password, cb) {\n    let userInfo = { userName: userName, password: password };\n    API.checkUserLogin(userInfo).then(res => {\n      console.log(res.data);\n      if (res.data !== null) {\n        this.userId = res.data.id;\n        this.userName = userName;\n        this.password = password;\n        this.isAuthenticated = true;\n        cb(null);\n      } else {\n        cb(-1);\n      }\n    });\n  },\n\n  authenticateForSignUp(userName, password, cb) {\n    let userInfo = { userName: userName, password: password };\n    API.checkForUserName(userInfo).then(res => {\n      console.log(res.data);\n      if (res.data === null) {\n        API.signUpUser(userInfo)\n          .then(res => {\n            console.log(res.data);\n            this.userId = res.data.id;\n            this.userName = userName;\n            this.password = password;\n            this.isAuthenticated = true;\n          })\n          .catch(err => console.log(err));\n        // this.isAuthenticated = true;\n        cb(null);\n      } else {\n        alert(\"User name already taken try different username\");\n        cb(-1);\n      }\n    });\n  },\n\n  signout(cb) {\n    this.isAuthenticated = false;\n    setTimeout(cb, 100); // fake async\n  }\n};\n"]},"metadata":{},"sourceType":"module"}